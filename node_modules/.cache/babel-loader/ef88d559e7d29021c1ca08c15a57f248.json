{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"checked\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useSwitch from './useSwitch';\nimport classes from './switchUnstyledClasses';\nimport appendStyleProps from '../utils/appendStyleProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switches](https://material-ui.com/components/switches/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://material-ui.com/api/switch-unstyled/)\n */\n\nvar SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _components$Thumb, _componentsProps$thum, _components$Input, _componentsProps$inpu;\n\n  var checkedProp = props.checked,\n      className = props.className,\n      component = props.component,\n      _props$components = props.components,\n      components = _props$components === void 0 ? {} : _props$components,\n      _props$componentsProp = props.componentsProps,\n      componentsProps = _props$componentsProp === void 0 ? {} : _props$componentsProp,\n      defaultChecked = props.defaultChecked,\n      disabledProp = props.disabled,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      onFocusVisible = props.onFocusVisible,\n      readOnlyProp = props.readOnly,\n      otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked: defaultChecked,\n    disabled: disabledProp,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    onFocusVisible: onFocusVisible,\n    readOnly: readOnlyProp\n  };\n\n  var _useSwitch = useSwitch(useSwitchProps),\n      getInputProps = _useSwitch.getInputProps,\n      checked = _useSwitch.checked,\n      disabled = _useSwitch.disabled,\n      focusVisible = _useSwitch.focusVisible,\n      readOnly = _useSwitch.readOnly;\n\n  var styleProps = _extends({}, props, {\n    checked: checked,\n    disabled: disabled,\n    focusVisible: focusVisible,\n    readOnly: readOnly\n  });\n\n  var Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'span';\n  var rootProps = appendStyleProps(Root, _extends({}, otherProps, componentsProps.root), styleProps);\n  var Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : 'span';\n  var thumbProps = appendStyleProps(Thumb, (_componentsProps$thum = componentsProps.thumb) != null ? _componentsProps$thum : {}, styleProps);\n  var Input = (_components$Input = components.Input) != null ? _components$Input : 'input';\n  var inputProps = appendStyleProps(Input, (_componentsProps$inpu = componentsProps.input) != null ? _componentsProps$inpu : {}, styleProps);\n  var stateClasses = clsx(checked && classes.checked, disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly);\n  return /*#__PURE__*/_jsxs(Root, _extends({\n    ref: ref\n  }, rootProps, {\n    className: clsx(classes.root, stateClasses, className, rootProps == null ? void 0 : rootProps.className),\n    children: [/*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps, {\n      className: clsx(classes.thumb, thumbProps == null ? void 0 : thumbProps.className)\n    })), /*#__PURE__*/_jsx(Input, _extends({}, getInputProps(inputProps), {\n      className: clsx(classes.input, inputProps == null ? void 0 : inputProps.className)\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to `components.Root`. If both are provided, the `component` is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default SwitchUnstyled;","map":{"version":3,"sources":["/Users/surendrakalluri/Desktop/projects/surendra_portfolio/node_modules/@material-ui/unstyled/SwitchUnstyled/SwitchUnstyled.js"],"names":["_extends","_objectWithoutPropertiesLoose","_excluded","React","PropTypes","clsx","useSwitch","classes","appendStyleProps","jsx","_jsx","jsxs","_jsxs","SwitchUnstyled","forwardRef","props","ref","_ref","_components$Thumb","_componentsProps$thum","_components$Input","_componentsProps$inpu","checkedProp","checked","className","component","components","componentsProps","defaultChecked","disabledProp","disabled","onBlur","onChange","onFocus","onFocusVisible","readOnlyProp","readOnly","otherProps","useSwitchProps","getInputProps","focusVisible","styleProps","Root","rootProps","root","Thumb","thumbProps","thumb","Input","inputProps","input","stateClasses","children","process","env","NODE_ENV","propTypes","bool","string","elementType","shape","object","func","required"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,IAAMC,SAAS,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,WAAzB,EAAsC,YAAtC,EAAoD,iBAApD,EAAuE,gBAAvE,EAAyF,UAAzF,EAAqG,QAArG,EAA+G,UAA/G,EAA2H,SAA3H,EAAsI,gBAAtI,EAAwJ,UAAxJ,EAAoK,UAApK,CAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,GAAG,IAAIC,IAAhB,QAA4B,mBAA5B;AACA,SAASC,IAAI,IAAIC,KAAjB,QAA8B,mBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,cAAc,GAAG,aAAaV,KAAK,CAACW,UAAN,CAAiB,SAASD,cAAT,CAAwBE,KAAxB,EAA+BC,GAA/B,EAAoC;AACvF,MAAIC,IAAJ,EAAUC,iBAAV,EAA6BC,qBAA7B,EAAoDC,iBAApD,EAAuEC,qBAAvE;;AAEA,MACWC,WADX,GAaIP,KAbJ,CACEQ,OADF;AAAA,MAEEC,SAFF,GAaIT,KAbJ,CAEES,SAFF;AAAA,MAGEC,SAHF,GAaIV,KAbJ,CAGEU,SAHF;AAAA,0BAaIV,KAbJ,CAIEW,UAJF;AAAA,MAIEA,UAJF,kCAIe,EAJf;AAAA,8BAaIX,KAbJ,CAKEY,eALF;AAAA,MAKEA,eALF,sCAKoB,EALpB;AAAA,MAMEC,cANF,GAaIb,KAbJ,CAMEa,cANF;AAAA,MAOYC,YAPZ,GAaId,KAbJ,CAOEe,QAPF;AAAA,MAQEC,MARF,GAaIhB,KAbJ,CAQEgB,MARF;AAAA,MASEC,QATF,GAaIjB,KAbJ,CASEiB,QATF;AAAA,MAUEC,OAVF,GAaIlB,KAbJ,CAUEkB,OAVF;AAAA,MAWEC,cAXF,GAaInB,KAbJ,CAWEmB,cAXF;AAAA,MAYYC,YAZZ,GAaIpB,KAbJ,CAYEqB,QAZF;AAAA,MAcMC,UAdN,GAcmBpC,6BAA6B,CAACc,KAAD,EAAQb,SAAR,CAdhD;;AAgBA,MAAMoC,cAAc,GAAG;AACrBf,IAAAA,OAAO,EAAED,WADY;AAErBM,IAAAA,cAAc,EAAdA,cAFqB;AAGrBE,IAAAA,QAAQ,EAAED,YAHW;AAIrBE,IAAAA,MAAM,EAANA,MAJqB;AAKrBC,IAAAA,QAAQ,EAARA,QALqB;AAMrBC,IAAAA,OAAO,EAAPA,OANqB;AAOrBC,IAAAA,cAAc,EAAdA,cAPqB;AAQrBE,IAAAA,QAAQ,EAAED;AARW,GAAvB;;AAUA,mBAMI7B,SAAS,CAACgC,cAAD,CANb;AAAA,MACEC,aADF,cACEA,aADF;AAAA,MAEEhB,OAFF,cAEEA,OAFF;AAAA,MAGEO,QAHF,cAGEA,QAHF;AAAA,MAIEU,YAJF,cAIEA,YAJF;AAAA,MAKEJ,QALF,cAKEA,QALF;;AAQA,MAAMK,UAAU,GAAGzC,QAAQ,CAAC,EAAD,EAAKe,KAAL,EAAY;AACrCQ,IAAAA,OAAO,EAAPA,OADqC;AAErCO,IAAAA,QAAQ,EAARA,QAFqC;AAGrCU,IAAAA,YAAY,EAAZA,YAHqC;AAIrCJ,IAAAA,QAAQ,EAARA;AAJqC,GAAZ,CAA3B;;AAOA,MAAMM,IAAI,GAAG,CAACzB,IAAI,GAAGQ,SAAS,IAAI,IAAb,GAAoBA,SAApB,GAAgCC,UAAU,CAACgB,IAAnD,KAA4D,IAA5D,GAAmEzB,IAAnE,GAA0E,MAAvF;AACA,MAAM0B,SAAS,GAAGnC,gBAAgB,CAACkC,IAAD,EAAO1C,QAAQ,CAAC,EAAD,EAAKqC,UAAL,EAAiBV,eAAe,CAACiB,IAAjC,CAAf,EAAuDH,UAAvD,CAAlC;AACA,MAAMI,KAAK,GAAG,CAAC3B,iBAAiB,GAAGQ,UAAU,CAACmB,KAAhC,KAA0C,IAA1C,GAAiD3B,iBAAjD,GAAqE,MAAnF;AACA,MAAM4B,UAAU,GAAGtC,gBAAgB,CAACqC,KAAD,EAAQ,CAAC1B,qBAAqB,GAAGQ,eAAe,CAACoB,KAAzC,KAAmD,IAAnD,GAA0D5B,qBAA1D,GAAkF,EAA1F,EAA8FsB,UAA9F,CAAnC;AACA,MAAMO,KAAK,GAAG,CAAC5B,iBAAiB,GAAGM,UAAU,CAACsB,KAAhC,KAA0C,IAA1C,GAAiD5B,iBAAjD,GAAqE,OAAnF;AACA,MAAM6B,UAAU,GAAGzC,gBAAgB,CAACwC,KAAD,EAAQ,CAAC3B,qBAAqB,GAAGM,eAAe,CAACuB,KAAzC,KAAmD,IAAnD,GAA0D7B,qBAA1D,GAAkF,EAA1F,EAA8FoB,UAA9F,CAAnC;AACA,MAAMU,YAAY,GAAG9C,IAAI,CAACkB,OAAO,IAAIhB,OAAO,CAACgB,OAApB,EAA6BO,QAAQ,IAAIvB,OAAO,CAACuB,QAAjD,EAA2DU,YAAY,IAAIjC,OAAO,CAACiC,YAAnF,EAAiGJ,QAAQ,IAAI7B,OAAO,CAAC6B,QAArH,CAAzB;AACA,SAAO,aAAaxB,KAAK,CAAC8B,IAAD,EAAO1C,QAAQ,CAAC;AACvCgB,IAAAA,GAAG,EAAEA;AADkC,GAAD,EAErC2B,SAFqC,EAE1B;AACZnB,IAAAA,SAAS,EAAEnB,IAAI,CAACE,OAAO,CAACqC,IAAT,EAAeO,YAAf,EAA6B3B,SAA7B,EAAwCmB,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAACnB,SAA/E,CADH;AAEZ4B,IAAAA,QAAQ,EAAE,CAAC,aAAa1C,IAAI,CAACmC,KAAD,EAAQ7C,QAAQ,CAAC,EAAD,EAAK8C,UAAL,EAAiB;AAC3DtB,MAAAA,SAAS,EAAEnB,IAAI,CAACE,OAAO,CAACwC,KAAT,EAAgBD,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACtB,SAAzD;AAD4C,KAAjB,CAAhB,CAAlB,EAEL,aAAad,IAAI,CAACsC,KAAD,EAAQhD,QAAQ,CAAC,EAAD,EAAKuC,aAAa,CAACU,UAAD,CAAlB,EAAgC;AACpEzB,MAAAA,SAAS,EAAEnB,IAAI,CAACE,OAAO,CAAC2C,KAAT,EAAgBD,UAAU,IAAI,IAAd,GAAqB,KAAK,CAA1B,GAA8BA,UAAU,CAACzB,SAAzD;AADqD,KAAhC,CAAhB,CAFZ;AAFE,GAF0B,CAAf,CAAzB;AAUD,CA7DmC,CAApC;AA8DA6B,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC1C,cAAc,CAAC2C;AACvD;AADwC,EAEtC;AACA;AACA;AACA;AACA;;AAEA;AACF;AACA;AACEjC,EAAAA,OAAO,EAAEnB,SAAS,CAACqD,IATnB;;AAWA;AACF;AACA;AACEjC,EAAAA,SAAS,EAAEpB,SAAS,CAACsD,MAdrB;;AAgBA;AACF;AACA;AACA;AACA;AACEjC,EAAAA,SAAS,EAAErB,SAAS,CAACuD,WArBrB;;AAuBA;AACF;AACA;AACA;AACA;AACEjC,EAAAA,UAAU,EAAEtB,SAAS,CAACwD,KAAV,CAAgB;AAC1BZ,IAAAA,KAAK,EAAE5C,SAAS,CAACuD,WADS;AAE1BjB,IAAAA,IAAI,EAAEtC,SAAS,CAACuD,WAFU;AAG1Bd,IAAAA,KAAK,EAAEzC,SAAS,CAACuD;AAHS,GAAhB,CA5BZ;;AAkCA;AACF;AACA;AACA;AACEhC,EAAAA,eAAe,EAAEvB,SAAS,CAACyD,MAtC3B;;AAwCA;AACF;AACA;AACEjC,EAAAA,cAAc,EAAExB,SAAS,CAACqD,IA3C1B;;AA6CA;AACF;AACA;AACE3B,EAAAA,QAAQ,EAAE1B,SAAS,CAACqD,IAhDpB;;AAkDA;AACF;AACA;AACE1B,EAAAA,MAAM,EAAE3B,SAAS,CAAC0D,IArDlB;;AAuDA;AACF;AACA;AACA;AACA;AACA;AACA;AACE9B,EAAAA,QAAQ,EAAE5B,SAAS,CAAC0D,IA9DpB;;AAgEA;AACF;AACA;AACE7B,EAAAA,OAAO,EAAE7B,SAAS,CAAC0D,IAnEnB;;AAqEA;AACF;AACA;AACE5B,EAAAA,cAAc,EAAE9B,SAAS,CAAC0D,IAxE1B;;AA0EA;AACF;AACA;AACE1B,EAAAA,QAAQ,EAAEhC,SAAS,CAACqD,IA7EpB;;AA+EA;AACF;AACA;AACEM,EAAAA,QAAQ,EAAE3D,SAAS,CAACqD;AAlFpB,CAFF,GAqFI,KAAK,CArFT;AAsFA,eAAe5C,cAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"checked\", \"className\", \"component\", \"components\", \"componentsProps\", \"defaultChecked\", \"disabled\", \"onBlur\", \"onChange\", \"onFocus\", \"onFocusVisible\", \"readOnly\", \"required\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport useSwitch from './useSwitch';\nimport classes from './switchUnstyledClasses';\nimport appendStyleProps from '../utils/appendStyleProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\n/**\n * The foundation for building custom-styled switches.\n *\n * Demos:\n *\n * - [Switches](https://material-ui.com/components/switches/)\n *\n * API:\n *\n * - [SwitchUnstyled API](https://material-ui.com/api/switch-unstyled/)\n */\nconst SwitchUnstyled = /*#__PURE__*/React.forwardRef(function SwitchUnstyled(props, ref) {\n  var _ref, _components$Thumb, _componentsProps$thum, _components$Input, _componentsProps$inpu;\n\n  const {\n    checked: checkedProp,\n    className,\n    component,\n    components = {},\n    componentsProps = {},\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  } = props,\n        otherProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const useSwitchProps = {\n    checked: checkedProp,\n    defaultChecked,\n    disabled: disabledProp,\n    onBlur,\n    onChange,\n    onFocus,\n    onFocusVisible,\n    readOnly: readOnlyProp\n  };\n  const {\n    getInputProps,\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  } = useSwitch(useSwitchProps);\n\n  const styleProps = _extends({}, props, {\n    checked,\n    disabled,\n    focusVisible,\n    readOnly\n  });\n\n  const Root = (_ref = component != null ? component : components.Root) != null ? _ref : 'span';\n  const rootProps = appendStyleProps(Root, _extends({}, otherProps, componentsProps.root), styleProps);\n  const Thumb = (_components$Thumb = components.Thumb) != null ? _components$Thumb : 'span';\n  const thumbProps = appendStyleProps(Thumb, (_componentsProps$thum = componentsProps.thumb) != null ? _componentsProps$thum : {}, styleProps);\n  const Input = (_components$Input = components.Input) != null ? _components$Input : 'input';\n  const inputProps = appendStyleProps(Input, (_componentsProps$inpu = componentsProps.input) != null ? _componentsProps$inpu : {}, styleProps);\n  const stateClasses = clsx(checked && classes.checked, disabled && classes.disabled, focusVisible && classes.focusVisible, readOnly && classes.readOnly);\n  return /*#__PURE__*/_jsxs(Root, _extends({\n    ref: ref\n  }, rootProps, {\n    className: clsx(classes.root, stateClasses, className, rootProps == null ? void 0 : rootProps.className),\n    children: [/*#__PURE__*/_jsx(Thumb, _extends({}, thumbProps, {\n      className: clsx(classes.thumb, thumbProps == null ? void 0 : thumbProps.className)\n    })), /*#__PURE__*/_jsx(Input, _extends({}, getInputProps(inputProps), {\n      className: clsx(classes.input, inputProps == null ? void 0 : inputProps.className)\n    }))]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? SwitchUnstyled.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component is checked.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Class name applied to the root element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the Root slot.\n   * Either a string to use a HTML element or a component.\n   * This is equivalent to `components.Root`. If both are provided, the `component` is used.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * The components used for each slot inside the Switch.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Input: PropTypes.elementType,\n    Root: PropTypes.elementType,\n    Thumb: PropTypes.elementType\n  }),\n\n  /**\n   * The props used for each slot inside the Switch.\n   * @default {}\n   */\n  componentsProps: PropTypes.object,\n\n  /**\n   * The default checked state. Use when the component is not controlled.\n   */\n  defaultChecked: PropTypes.bool,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.ChangeEvent<HTMLInputElement>} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (string).\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func,\n\n  /**\n   * If `true`, the component is read only.\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * If `true`, the `input` element is required.\n   */\n  required: PropTypes.bool\n} : void 0;\nexport default SwitchUnstyled;"]},"metadata":{},"sourceType":"module"}